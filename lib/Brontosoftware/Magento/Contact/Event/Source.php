<?php
/**
 * This file was generated by the ConvertToLegacy class in bronto-legacy.
 * The purpose of the conversion was to maintain PSR-0 compliance while
 * the main development focuses on modern styles found in PSR-4.
 *
 * For the original:
 * @see src/Bronto/Magento/Contact/Event/Source.php
 */

class Brontosoftware_Magento_Contact_Event_Source implements Brontosoftware_Magento_Connector_Event_SourceInterface, Brontosoftware_Magento_Connector_Event_ContextProviderInterface
{
    protected $_helper;

    /**
     * @param Brontosoftware_Magento_Contact_SettingsInterface $helper
     */
    public function __construct(
        Brontosoftware_Magento_Contact_SettingsInterface $helper
    ) {
        $this->_helper = $helper;
    }

    /**
     * @see parent
     */
    public function create($customer)
    {
      return array(
          'updated_email' => $customer->dataHasChangedFor('email') ?
              $customer->getOrigData('email') :
              $customer->getEmail(),
          'uniqueKey' => implode('.', array(
              $this->getEventType(),
              $this->action($customer),
              $customer->getId()
          ))
        );
    }

    /**
     * @see parent
     */
    public function getEventType()
    {
        return 'contact';
    }

    /**
     * @see parent
     */
    public function action($customer)
    {
        return $customer->getIsUpdateEmail() ? 'update' : 'add';
    }

    /**
     * @see parent
     */
    public function transform($customer)
    {
        if ($customer->getIsUpdateEmail() && $customer->dataHasChangedFor('email')) {
            return array(
                'id' => $customer->getOrigData('email'),
                'email' => $customer->getEmail()
            );
        } else {
            return array(
                'email' => $customer->getEmail(),
                'status' => 'transactional',
                'fields' => $this->_helper->getFieldsForModel($customer, $customer->getStore())
            );
        }
    }
}
