<?php
/**
 * This file was generated by the ConvertToLegacy class in bronto-legacy.
 * The purpose of the conversion was to maintain PSR-0 compliance while
 * the main development focuses on modern styles found in PSR-4.
 *
 * For the original:
 * @see src/Bronto/Magento/TargetRule/Source/Rule.php
 */

class Brontosoftware_Magento_TargetRule_Source_Rule implements Brontosoftware_Magento_Recommendation_Collect_SourceInterface
{
    protected static $_typeToImpl = array(
        Brontosoftware_Magento_Recommendation_Collect_SourceInterface::TYPE_RELATED => 1,
        Brontosoftware_Magento_Recommendation_Collect_SourceInterface::TYPE_UPSELL => 2,
        Brontosoftware_Magento_Recommendation_Collect_SourceInterface::TYPE_CROSSSELL => 3,
    );
    protected static $_ruleBehaviors = array(0, 2);
    protected static $_selectedBehaviors = array(0, 1);

    protected $_promotion;
    protected $_product;
    protected $_type;
    protected $_typePrefix;
    protected $_source;
    protected $_factory;
    protected $_settings;

    /**
     * @param $promotion
     * @param $product
     * @param string $type
     * @param Brontosoftware_Magento_Recommendation_Collect_SourceInterface $source
     * @param Brontosoftware_Magento_TargetRule_IndexFactoryInterface $factory
     * @param Brontosoftware_Magento_TargetRule_SettingsInterface $settings
     */
    public function __construct(
        $promotion,
        $product,
        $type,
        Brontosoftware_Magento_Recommendation_Collect_SourceInterface $source,
        Brontosoftware_Magento_TargetRule_IndexFactoryInterface $factory,
        Brontosoftware_Magento_TargetRule_SettingsInterface $settings
    ) {
        $this->_type = self::$_typeToImpl[$type];
        $this->_typePrefix = $type;
        $this->_promotion = $promotion;
        $this->_product = $product;
        $this->_source = $source;
        $this->_factory = $factory;
        $this->_settings = $settings;
    }

    /**
     * @see parent
     */
    public function collect(Brontosoftware_Magento_Recommendation_Collect_ContextInterface $context)
    {
        $productIds = array();
        $behavior = $this->_getPositionBehavior();
        if (in_array($behavior, self::$_ruleBehaviors)) {
            $productIds = $this->_factory->create()
                ->setType($this->_type)
                ->setLimit($this->_getPositionLimit())
                ->setProduct($this->_product)
                ->setExcludedProductIds(array_keys($context->getContextItems()))
                ->getProductIds();
        }

        if (in_array($behavior, self::$_selectedBehaviors)) {
            foreach ($this->_source->collect($context) as $productId) {
                $productIds[] = $productId;
            }
        }

        return $this->_settings->rotate($this->_type, array_unique($productIds));
    }

    /**
     * Gets the show behavior based on either the product or master config
     *
     * @return int
     */
    protected function _getPositionBehavior()
    {
        $behavior = $this->_product->getData($this->_getPositionBehaviorField());
        if (is_null($behavior)) {
            $behavior = $this->_settings->getShowProducts($this->_type);
        }
        return $behavior;
    }

    /**
     * Gets the limit either on the product or master config
     *
     * @return int
     */
    protected function _getPositionLimit()
    {
        $limit = $this->_product->getData($this->_getPositionLimitField());
        if (is_null($limit)) {
            $limit = $this->_settings->getMaximumNumberOfProduct($this->_type);
        }
        return $this->_settings->getMaxProductsListResult($limit);
    }

    /**
     * Gets the behavior field on the product
     *
     * @return string
     */
    protected function _getPositionBehaviorField()
    {
        return sprintf("%s_tgtr_position_behavior", $this->_typePrefix);
    }

    /**
     * Gets the limit on the relation rule
     *
     * @return string
     */
    protected function _getPositionLimitField()
    {
        return sprintf("%s_tgtr_position_limit", $this->_typePrefix);
    }
}
