<?php
/**
 * This file was generated by the ConvertToLegacy class in bronto-legacy.
 * The purpose of the conversion was to maintain PSR-0 compliance while
 * the main development focuses on modern styles found in PSR-4.
 *
 * For the original:
 * @see src/Bronto/Magento/Connector/MiddlewareInterface.php
 */

interface Brontosoftware_Magento_Connector_MiddlewareInterface
{
    /**
     * Performs the registration to the Brontosoftware_Magento_Connector_Middleware
     *
     * @param Brontosoftware_Magento_Connector_RegistrationInterface $model
     * @return boolean
     */
    public function register(Brontosoftware_Magento_Connector_RegistrationInterface $model);

    /**
     * Performs the deregistration to the Brontosoftware_Magento_Connector_Middleware
     *
     * @param Brontosoftware_Magento_Connector_RegistrationInterface $model
     * @return boolean
     */
    public function deregister(Brontosoftware_Magento_Connector_RegistrationInterface $model);

    /**
     * Syncs the settings from the Brontosoftware_Magento_Connector_Middleware
     *
     * @param Brontosoftware_Magento_Connector_RegistrationInterface $model
     * @return boolean
     */
    public function sync(Brontosoftware_Magento_Connector_RegistrationInterface $model);

    /**
     * Flushes the event queue with a Brontosoftware_Magento_Connector_Middleware job
     *
     * @param Brontosoftware_Magento_Connector_RegistrationInterface $model
     * @return boolean
     */
    public function triggerFlush(Brontosoftware_Magento_Connector_RegistrationInterface $model);

    /**
     * Creates the lookup key from a given Registration
     *
     * @param Brontosoftware_Magento_Connector_RegistrationInterface $model
     * @return string
     */
    public function installKey(Brontosoftware_Magento_Connector_RegistrationInterface $model);

    /**
     * Gets the default store ID from a scope
     *
     * @param string $scopeType
     * @param mixed $scopeId
     * @return string
     */
    public function defaultStoreId($scopeType = 'default', $scopeId = '0');

    /**
     * Gets all store scopes for a registration
     *
     * @param Brontosoftware_Magento_Connector_RegistrationInterface $model
     * @param boolean $includeSelf
     * @return array
     */
    public function storeScopes(Brontosoftware_Magento_Connector_RegistrationInterface $model, $includeSelf = false);
}
